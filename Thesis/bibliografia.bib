
@online{noauthor_zotero_nodate,
	title = {Zotero {\textbar} Email validation},
	url = {https://www.zotero.org/user/validate/4904e54e2a2fbab0b4b4},
	urldate = {2020-10-28},
	file = {Zotero | Email validation:C\:\\Users\\ruben\\Zotero\\storage\\P75IZDRK\\4904e54e2a2fbab0b4b4.html:text/html},
}

@article{johnny_huynh_separating_2008,
	title = {Separating Axis Theorem for Oriented Bounding Boxes},
	pages = {45},
	author = {{Johnny Huynh}},
	date = {2008-12-16},
	langid = {english},
	file = {Huynh - Separating Axis Theorem for Oriented Bounding Boxe.pdf:C\:\\Users\\ruben\\Zotero\\storage\\GPFDZV2B\\Huynh - Separating Axis Theorem for Oriented Bounding Boxe.pdf:application/pdf},
}

@article{david_eberly_dynamic_2008,
	title = {Dynamic Collision Detection using Oriented Bounding Boxes},
	pages = {40},
	author = {{David Eberly}},
	date = {2008-03-02},
	langid = {english},
	file = {Eberly - Dynamic Collision Detection using Oriented Boundin.pdf:C\:\\Users\\ruben\\Zotero\\storage\\2JWI9K36\\Eberly - Dynamic Collision Detection using Oriented Boundin.pdf:application/pdf},
}

@book{de_vries_learn_nodate,
	title = {Learn {OpenGL}},
	rights = {Creative Commons Attribution-{NonCommercial} 3.0 Unported License},
	url = {https://learnopengl.com/book/offline%20learnopengl.pdf},
	abstract = {La transcripción de la web learopengl.org para aprender a utilizar {OpenGL}},
	author = {de Vries, Joey},
	urldate = {2020-10-28},
	file = {offline learnopengl.pdf:C\:\\Users\\ruben\\Zotero\\storage\\ZFLQU9GE\\offline learnopengl.pdf:application/pdf},
}

@book{joey_de_vries_learn_2020,
	title = {Learn {OpenGL}: Learn modern {OpenGL} graphics programming in a step-by-step fashion.},
	isbn = {978-90-90-33256-7},
	shorttitle = {Learn {OpenGL}},
	abstract = {Graphics programmers are often coined the 'wizards' of the game industry. As every magician knows, terms like wizardry and magic are often somewhat exaggerated. Yet, there is a certain charm to graphics programming: the ability to conjure up complete living worlds at our fingertips.Learn {OpenGL} will teach you the basics, the intermediate, and tons of advanced knowledge, using modern (core-profile) {OpenGL}. The aim of this book is to show you all there is to modern {OpenGL} in an easy-to-understand fashion, with clear examples and step-by-step instructions, while also providing a useful reference for later studies.After years of continuous work and improvements on the accompanying website learnopengl.com, with the help of thousands of readers, its content has been professionally revised for this physical copy you now find in your hands.Graphics programming isn't as hard as many people make it out to be... you just need to start.},
	pagetotal = {522},
	author = {{Joey de Vries}},
	date = {2020-06-17},
}

@book{bjarne_stroustrup_tour_2013,
	location = {Upper Saddle River, {NJ}},
	title = {A Tour of C++},
	isbn = {978-0-321-95831-0},
	abstract = {The C++11 standard allows programmers to express ideas more clearly, simply, and directly, and to write faster, more efficient code. Bjarne Stroustrup, the designer and original implementer of C++, thoroughly covers the details of this language and its use in his definitive reference, The C++ Programming Language, Fourth Edition. In A Tour of C++, Stroustrup excerpts the overview chapters from that complete reference, expanding and enhancing them to give an experienced programmer-in just a few hours-a clear idea of what constitutes modern C++. In this concise, self-contained guide, Stroustrup covers most major language features and the major standard-library components-not, of course, in great depth, but to a level that gives programmers a meaningful overview of the language, some key examples, and practical help in getting started. Stroustrup presents the C++ features in the context of the programming styles they support, such as object-oriented and generic programming. His tour is remarkably comprehensive. Coverage begins with the basics, then ranges widely through more advanced topics, including many that are new in C++11, such as move semantics, uniform initialization, lambda expressions, improved containers, random numbers, and concurrency. The tour ends with a discussion of the design and evolution of C++ and the extensions added for C++11. This guide does not aim to teach you how to program (see Stroustrup's Programming: Principles and Practice Using C++ for that); nor will it be the only resource you'll need for C++ mastery (see Stroustrup's The C++ Programming Language, Fourth Edition, for that). If, however, you are a C or C++ programmer wanting greater familiarity with the current C++ language, or a programmer versed in another language wishing to gain an accurate picture of the nature and benefits of modern C++, you can't find a shorter or simpler introduction than this tour provides.},
	pagetotal = {192},
	author = {{Bjarne Stroustrup}},
	date = {2013-10-03},
}

@book{melanie_mitchell_introduction_1998,
	title = {An Introduction to Genetic Algorithms},
	isbn = {978-0-262-63185-3},
	abstract = {Genetic algorithms have been used in science and engineering as adaptive algorithms for solving practical problems and as computational models of natural evolutionary systems. This brief, accessible introduction describes some of the most interesting research in the field and also enables readers to implement and experiment with genetic algorithms on their own. It focuses in depth on a small set of important and interesting topics--particularly in machine learning, scientific modeling, and artificial life--and reviews a broad span of research, including the work of Mitchell and her colleagues. The descriptions of applications and modeling projects stretch beyond the strict boundaries of computer science to include dynamical systems theory, game theory, molecular biology, ecology, evolutionary biology, and population genetics, underscoring the exciting "general purpose" nature of genetic algorithms as search methods that can be employed across disciplines. An Introduction to Genetic Algorithms is accessible to students and researchers in any scientific discipline. It includes many thought and computer exercises that build on and reinforce the reader's understanding of the text. The first chapter introduces genetic algorithms and their terminology and describes two provocative applications in detail. The second and third chapters look at the use of genetic algorithms in machine learning (computer programs, data analysis and prediction, neural networks) and in scientific models (interactions among learning, evolution, and culture; sexual selection; ecosystems; evolutionary activity). Several approaches to the theory of genetic algorithms are discussed in depth in the fourth chapter. The fifth chapter takes up implementation, and the last chapter poses some currently unanswered questions and surveys prospects for the future of evolutionary computation.},
	pagetotal = {226},
	publisher = {{MIT} Press},
	author = {{Melanie Mitchell}},
	date = {1998},
	langid = {english},
	keywords = {Computers / Intelligence ({AI}) \& Semantics},
}

@article{juan_carlos_pozas_bustos_algoritmos_2000,
	title = {Algoritmos Genéticos. Aplicación al Juego de las N Reinas.},
	pages = {10},
	author = {{Juan Carlos Pozas Bustos} and {Nieves Vázquez Vázquez}},
	date = {2000},
	langid = {spanish},
	file = {Bustos y Vázquez - Algoritmos Genéticos. Aplicación al Juego de las N.pdf:C\:\\Users\\ruben\\Zotero\\storage\\IW7I65VV\\Bustos y Vázquez - Algoritmos Genéticos. Aplicación al Juego de las N.pdf:application/pdf},
}

@article{takeyas_introduccion_nodate,
	title = {{INTRODUCCIÓN} A {LA} {INTELIGENCIA} {ARTIFICIAL}},
	pages = {3},
	author = {Takeyas, Bruno López},
	langid = {spanish},
	file = {Takeyas - INTRODUCCIÓN A LA INTELIGENCIA ARTIFICIAL.pdf:C\:\\Users\\ruben\\Zotero\\storage\\WIIR5W3J\\Takeyas - INTRODUCCIÓN A LA INTELIGENCIA ARTIFICIAL.pdf:application/pdf},
}

@online{noauthor_basic_nodate,
	title = {Basic Questions},
	url = {http://www-formal.stanford.edu/jmc/whatisai/node1.html},
	urldate = {2020-10-30},
	file = {Basic Questions:C\:\\Users\\ruben\\Zotero\\storage\\4V9SUH7E\\node1.html:text/html},
}

@misc{john_mccarthy_what_nodate,
	title = {{WHAT} {IS} {ARTIFICIAL} {INTELLIGENCE}?},
	author = {{John McCarthy}},
	urldate = {2020-10-30},
	langid = {english},
	file = {WHAT IS ARTIFICIAL INTELLIGENCE?:C\:\\Users\\ruben\\Zotero\\storage\\J99EH2HS\\whatisai.html:text/html},
}

@inreference{noauthor_fitness_2020,
	title = {Fitness proportionate selection},
	rights = {Creative Commons Attribution-{ShareAlike} License},
	abstract = {Fitness proportionate selection, also known as roulette wheel selection, is a genetic operator used in genetic algorithms for selecting potentially useful solutions for recombination.
In fitness proportionate selection, as in all selection methods, the fitness function assigns a fitness to possible solutions or chromosomes.  This fitness level is used to associate a probability of selection with each individual chromosome. If 
  
    
      
        
          f
          
            i
          
        
      
    
    \{{\textbackslash}displaystyle f\_\{i\}\}
   is the fitness of individual 
  
    
      
        i
      
    
    \{{\textbackslash}displaystyle i\}
   in the population, its probability of being selected is 

  
    
      
        
          p
          
            i
          
        
        =
        
          
            
              f
              
                i
              
            
            
              
                Σ
                
                  j
                  =
                  1
                
                
                  N
                
              
              
                f
                
                  j
                
              
            
          
        
        ,
      
    
    \{{\textbackslash}displaystyle p\_\{i\}=\{{\textbackslash}frac \{f\_\{i\}\}\{{\textbackslash}Sigma \_\{j=1\}{\textasciicircum}\{N\}f\_\{j\}\}\},\}
  where 
  
    
      
        N
      
    
    \{{\textbackslash}displaystyle N\}
   is the number of individuals in the population.
This could be imagined similar to a Roulette wheel in a casino. Usually a proportion of the wheel is assigned to each of the possible selections based on their fitness value. This could be achieved by dividing the fitness of a selection by the total fitness of all the selections, thereby normalizing them to 1. Then a random selection is made similar to how the roulette wheel is rotated.
While candidate solutions with a higher fitness will be less likely to be eliminated, there is still a chance that they may be eliminated because their probability of selection is less than 1 (or 100\%).  Contrast this with a less sophisticated selection algorithm, such as truncation selection, which will eliminate a fixed percentage of the weakest candidates. With fitness proportionate selection there is a chance some weaker solutions may survive the selection process. This is because even though the probability that the weaker solutions will survive is low, it is not zero which means it is still possible they will survive; this is an advantage, because there is a chance that even weak solutions may have some features or characteristics which could prove useful following the recombination process.
The analogy to a roulette wheel can be envisaged by imagining a roulette wheel in which each candidate solution represents a pocket on the wheel; the size of the pockets are proportionate to the probability of selection of the solution.  Selecting N chromosomes from the population is equivalent to playing N games on the roulette wheel, as each candidate is drawn independently.
Other selection techniques, such as stochastic universal sampling or tournament selection, are often used in practice. This is because they have less stochastic noise, or are fast, easy to implement and have a constant selection pressure.The naive implementation is carried out by first generating the cumulative probability distribution ({CDF}) over the list of individuals using a probability proportional to the fitness of the individual. A uniform random number from the range [0,1) is chosen and the inverse of the {CDF} for that number gives an individual. This corresponds to the roulette ball falling in the bin of an individual with a probability proportional to its width. The "bin" corresponding to the inverse of the uniform random number can be found most quickly by using a binary search over the elements of the {CDF}. It takes in the O(log n) time to choose an individual. A faster alternative that generates individuals in O(1) time will be to use the alias method.
Recently, a very simple algorithm was introduced that is based on "stochastic acceptance". The algorithm randomly selects an individual (say 
  
    
      
        i
      
    
    \{{\textbackslash}displaystyle i\}
  ) and accepts the selection with probability 
  
    
      
        
          f
          
            i
          
        
        
          /
        
        
          f
          
            M
          
        
      
    
    \{{\textbackslash}displaystyle f\_\{i\}/f\_\{M\}\}
  , where 
  
    
      
        
          f
          
            M
          
        
      
    
    \{{\textbackslash}displaystyle f\_\{M\}\}
   is the maximum fitness in the population. Certain analysis indicates that the stochastic acceptance version has a considerably better performance than versions based on linear or binary search, especially in applications where fitness values might change during the run. While the behavior of this algorithm is typically fast, some fitness distributions (such as exponential distributions) may require 
  
    
      
        O
        (
        n
        )
      
    
    \{{\textbackslash}displaystyle O(n)\}
   iterations in the worst case. This algorithm also requires more random numbers than binary search.},
	booktitle = {Wikipedia},
	urldate = {2020-11-02},
	date = {2020-09-21},
	langid = {english},
	note = {Page Version {ID}: 979505220},
	file = {Snapshot:C\:\\Users\\ruben\\Zotero\\storage\\68LG9XSQ\\index.html:text/html},
}

@inreference{noauthor_tournament_2020,
	title = {Tournament selection},
	rights = {Creative Commons Attribution-{ShareAlike} License},
	url = {https://en.wikipedia.org/w/index.php?title=Tournament_selection&oldid=981242416},
	abstract = {Tournament selection is a method of selecting an individual from a population of individuals in a genetic algorithm. Tournament selection involves running several "tournaments" among a few individuals (or "chromosomes") chosen at random from the population.  The winner of each tournament (the one with the best fitness) is selected for crossover.  Selection pressure, a probabilistic measure of a chromosome's likelihood of participation in the tournament based on the participant selection pool size, is easily adjusted by changing the tournament size, the reason is that if the tournament size is larger, weak individuals have a smaller chance to be selected, because, if a weak individual is selected to be in a tournament, there is a higher probability that a stronger individual is also in that tournament.
The tournament selection method may be described in pseudo code:

choose k (the tournament size) individuals from the population at random
choose the best individual from the tournament with probability p
choose the second best individual with probability p*(1-p)
choose the third best individual with probability p*((1-p){\textasciicircum}2)
and so on

Deterministic tournament selection selects the best individual (when p = 1) in any tournament. A 1-way tournament (k = 1) selection is equivalent to random selection. There are two variants of the selection: with and without replacement. The variant without replacement guarantees that when selecting N individuals from a population of N elements, each individual participates in exactly k tournaments. An algorithm is proposed in . Note that depending on the number of elements selected, selection without replacement does not guarantee that no individual is selected more than once. It just guarantees that each individual has an equal chance of participating in the same number of tournaments.
In comparison with the (stochastic) fitness proportionate selection method, tournament selection is often implemented in practice due to its lack of stochastic noise.Tournament selection has several benefits over alternative selection methods for genetic algorithms (for example, fitness proportionate selection and reward-based selection): it is efficient to code, works on parallel architectures and allows the selection pressure to be easily adjusted.  Tournament selection has also been shown to be independent of the scaling of the genetic algorithm fitness function (or 'objective function') in some classifier systems.},
	booktitle = {Wikipedia},
	urldate = {2020-11-02},
	date = {2020-10-01},
	langid = {english},
	note = {Page Version {ID}: 981242416},
	file = {Snapshot:C\:\\Users\\ruben\\Zotero\\storage\\PJQG5A8Y\\index.html:text/html},
}

@article{nazif_optimized_2010,
	title = {Optimized Crossover Genetic Algorithm for Vehicle Routing Problem with Time Windows},
	volume = {7},
	abstract = {Problem statement: In this study, we considered the application of a genetic algorithm to vehicle routing problem with time windows where a set of vehicles with limits on capacity and travel time are available to service a set of customers with demands and earliest and latest time for serving. The objective is to find routes for the vehicles to service all the customers at a minimal cost without violating the capacity and travel time constraints of the vehicles and the time window constraints set by the customers. Approach: We proposed a genetic algorithm using an optimized crossover operator designed by a complete undirected bipartite graph that finds an optimal set of delivery routes satisfying the requirements and giving minimal total cost. Various techniques have also been introduced into the proposed algorithm to further enhance the solutions quality. Results: We tested our algorithm with benchmark instances and compared it with some other heuristics in the literature. The results showed that the proposed algorithm is competitive in terms of the quality of the solutions found. Conclusion/Recommendations: This study presented a genetic algorithm for solving vehicle routing problem with time windows using an optimized crossover operator. From the results, it can be concluded that the proposed algorithm is competitive when compared with other heuristics in the literature.},
	journaltitle = {American Journal of Applied Sciences},
	shortjournal = {American Journal of Applied Sciences},
	author = {Nazif, Habibeh and Lee, Lai Soon},
	date = {2010-01-01},
}

@article{zakir_h_ahmed_genetic_nodate,
	title = {Genetic Algorithm for the Traveling Salesman Problem using Sequential Constructive Crossover Operator},
	abstract = {This paper develops a new crossover operator, Sequential Constructive crossover ({SCX}), for a genetic algorithm that generates high quality solutions to the Traveling Salesman Problem ({TSP}). The sequential constructive crossover operator constructs an offspring from a pair of parents using better edges on the basis of their values that may be present in the parents' structure maintaining the sequence of nodes in the parent chromosomes. The efficiency of the {SCX} is compared as against some existing crossover operators; namely, edge recombination crossover ({ERX}) and generalized N-point crossover ({GNX}) for some benchmark {TSPLIB} instances. Experimental results show that the new crossover operator is better than the {ERX} and {GNX}.},
	pages = {10},
	journaltitle = {International Journal of Biometrics},
	author = {{Zakir H Ahmed}},
	langid = {english},
	file = {Ahmed - Genetic Algorithm for the Traveling Salesman Probl.pdf:C\:\\Users\\ruben\\Zotero\\storage\\XGRUFFG2\\Ahmed - Genetic Algorithm for the Traveling Salesman Probl.pdf:application/pdf},
}

@online{ahmed_genetic_2010,
	title = {{GENETIC} {ALGORITHM} {FOR} {THE} {TRAVELING} {SALESMAN} {PROBLEM} {USING} {SEQUENTIAL} {CONSTRUCTIVE} {CROSSOVER}},
	url = {/paper/GENETIC-ALGORITHM-FOR-THE-TRAVELING-SALESMAN-USING-Ahmed/a1e650daed4ed9c6a403b08e5d50b3ea9f3b5de4},
	abstract = {This paper develops a new crossover operator, Sequential Constructive crossover ({SCX}), for a genetic algorithm that generates high quality solutions to the Traveling Salesman Problem ({TSP}). The sequential constructive crossover operator constructs an offspring from a pair of parents using better edges on the basis of their values that may be present in the parents\&\#39; structure maintaining the sequence of nodes in the parent chromosomes. The efficiency of the {SCX} is compared as against some existing crossover operators; namely, edge recombination crossover ({ERX}) and generalized N-point crossover ({GNX}) for some benchmark {TSPLIB} instances. Experimental results show that the new crossover operator is better than the {ERX} and {GNX}.},
	titleaddon = {undefined},
	author = {Ahmed, Z. H.},
	urldate = {2020-11-03},
	date = {2010},
	langid = {english},
	file = {Snapshot:C\:\\Users\\ruben\\Zotero\\storage\\LFBCK8RH\\a1e650daed4ed9c6a403b08e5d50b3ea9f3b5de4.html:text/html},
}

@article{yilmaz_kaya_novel_nodate,
	title = {A Novel Crossover Operator for Genetic Algorithms: Ring Crossover},
	abstract = {The genetic algorithm ({GA}) is an optimization and search technique based on the principles of genetics and natural selection. A {GA} allows a population composed of many individuals to evolve under specified selection rules to a state that maximizes the “fitness” function. In that process, crossover operator plays an important role. To comprehend the {GAs} as a whole, it is necessary to understand the role of a crossover operator. Today, there are a number of different crossover operators that can be used in {GAs}. However, how to decide what operator to use for solving a problem? A number of test functions with various levels of difficulty has been selected as a test polygon for determine the performance of crossover operators.},
	pages = {4},
	author = {{Yılmaz Kaya} and {Murat Uyar} and {Ramazan Tekđn}},
	langid = {english},
	file = {Kaya et al. - A Novel Crossover Operator for Genetic Algorithms.pdf:C\:\\Users\\ruben\\Zotero\\storage\\JSLG65DN\\Kaya et al. - A Novel Crossover Operator for Genetic Algorithms.pdf:application/pdf},
}

@article{dr_anantkumar_umbarkar_crossover_2015,
	title = {{CROSSOVER} {OPERATORS} {IN} {GENETIC} {ALGORITHMS}: A {REVIEW}},
	volume = {6},
	doi = {10.21917/ijsc.2015.0150},
	shorttitle = {{CROSSOVER} {OPERATORS} {IN} {GENETIC} {ALGORITHMS}},
	abstract = {The performance of Genetic Algorithm ({GA}) depends on various operators. Crossover operator is one of them. Crossover operators are mainly classified as application dependent crossover operators and application independent crossover operators. Effect of crossover operators in {GA} is application as well as encoding dependent. This paper will help researchers in selecting appropriate crossover operator for better results. The paper contains description about classical standard crossover operators, binary crossover operators, and application dependant crossover operators. Each crossover operator has its own advantages and disadvantages under various circumstances. This paper reviews the crossover operators proposed and experimented by various researchers.},
	journaltitle = {{ICTACT} Journal on Soft Computing ( Volume: 6 , Issue: 1 )},
	shortjournal = {{ICTACT} Journal on Soft Computing ( Volume: 6 , Issue: 1 )},
	author = {{Dr. Anantkumar Umbarkar} and {P. Sheth}},
	date = {2015-10-01},
	file = {Full Text PDF:C\:\\Users\\ruben\\Zotero\\storage\\LFTUBCSN\\Umbarkar y Sheth - 2015 - CROSSOVER OPERATORS IN GENETIC ALGORITHMS A REVIE.pdf:application/pdf},
}

@inproceedings{r_l_haupt_optimum_2000,
	title = {Optimum population size and mutation rate for a simple real genetic algorithm that optimizes array factors},
	volume = {2},
	doi = {10.1109/APS.2000.875398},
	abstract = {There has been an explosion of papers describing applications of a genetic algorithm ({GA}) to electromagnetics problems. Most of the work has followed traditional {GA} philosophy when choosing the population size and mutation rate of the genetic algorithm. This paper reports the results of experiments to determine the optimum population size and mutation rate for a simple real genetic algorithm. The choice of population size and mutation rate can cause the run time of the {GA} to vary by several orders of magnitude. The results of this investigation show that a small population size and relatively large mutation rate is far superior to the large population sizes and low mutation rates that is used by most of the papers presented in the electromagnetics community and by the {GA} community at large. The results of the numerical experiments presented in this paper suggest that the best mutation rate for {GAs} lies between 5 and 20\% while the population size should be less than 16.},
	eventtitle = {{IEEE} Antennas and Propagation Society International Symposium. Transmitting Waves of Progress to the Next Millennium. 2000 Digest. Held in conjunction with: {USNC}/{URSI} National Radio Science Meeting (C},
	pages = {1034--1037 vol.2},
	booktitle = {{IEEE} Antennas and Propagation Society International Symposium. Transmitting Waves of Progress to the Next Millennium. 2000 Digest. Held in conjunction with: {USNC}/{URSI} National Radio Science Meeting (C},
	author = {{R. L. Haupt}},
	date = {2000-07},
	keywords = {antenna phased arrays, antenna radiation patterns, Application software, array factors, Displays, Electromagnetics, electromagnetics problems, Explosions, genetic algorithm, genetic algorithms, Genetic algorithms, Genetic mutations, Helium, linear antenna array, linear antenna arrays, numerical experiments, optimum mutation rate, optimum population size, phase weights, Phased arrays, run time, sidelobe level, simple real genetic algorithm, Vectors, Wheels},
	file = {IEEE Xplore Abstract Record:C\:\\Users\\ruben\\Zotero\\storage\\BIQQMKZ9\\875398.html:text/html},
}

@inproceedings{r_l_haupt_optimum_2000-1,
	title = {Optimum population size and mutation rate for a simple real genetic algorithm that optimizes array factors},
	volume = {2},
	doi = {10.1109/APS.2000.875398},
	abstract = {There has been an explosion of papers describing applications of a genetic algorithm ({GA}) to electromagnetics problems. Most of the work has followed traditional {GA} philosophy when choosing the population size and mutation rate of the genetic algorithm. This paper reports the results of experiments to determine the optimum population size and mutation rate for a simple real genetic algorithm. The choice of population size and mutation rate can cause the run time of the {GA} to vary by several orders of magnitude. The results of this investigation show that a small population size and relatively large mutation rate is far superior to the large population sizes and low mutation rates that is used by most of the papers presented in the electromagnetics community and by the {GA} community at large. The results of the numerical experiments presented in this paper suggest that the best mutation rate for {GAs} lies between 5 and 20\% while the population size should be less than 16.},
	eventtitle = {{IEEE} Antennas and Propagation Society International Symposium. Transmitting Waves of Progress to the Next Millennium. 2000 Digest. Held in conjunction with: {USNC}/{URSI} National Radio Science Meeting (C},
	pages = {1034--1037 vol.2},
	booktitle = {{IEEE} Antennas and Propagation Society International Symposium. Transmitting Waves of Progress to the Next Millennium. 2000 Digest. Held in conjunction with: {USNC}/{URSI} National Radio Science Meeting (C},
	author = {{R. L. Haupt}},
	date = {2000-07},
	keywords = {antenna phased arrays, antenna radiation patterns, Application software, array factors, Displays, Electromagnetics, electromagnetics problems, Explosions, genetic algorithm, genetic algorithms, Genetic algorithms, Genetic mutations, Helium, linear antenna array, linear antenna arrays, numerical experiments, optimum mutation rate, optimum population size, phase weights, Phased arrays, run time, sidelobe level, simple real genetic algorithm, Vectors, Wheels},
	file = {IEEE Xplore Full Text PDF:C\:\\Users\\ruben\\Zotero\\storage\\VSI7MX7Y\\Haupt - 2000 - Optimum population size and mutation rate for a si.pdf:application/pdf;IEEE Xplore Abstract Record:C\:\\Users\\ruben\\Zotero\\storage\\9GGUGU9B\\875398.html:text/html},
}

@article{david_ha_visual_2017,
	title = {A Visual Guide to Evolution Strategies},
	url = {https://blog.otoro.net/2017/10/29/visual-evolution-strategies/},
	abstract = {A Visual Guide to Evolution Strategies},
	author = {{David Ha}},
	urldate = {2020-11-08},
	date = {2017-10-29},
	file = {Snapshot:C\:\\Users\\ruben\\Zotero\\storage\\PJMAL86K\\visual-evolution-strategies.html:text/html},
}

@article{andrew_n_sloss_2019_2019,
	title = {2019 Evolutionary Algorithms Review},
	url = {http://arxiv.org/abs/1906.08870},
	abstract = {Evolutionary algorithm research and applications began over 50 years ago. Like other artificial intelligence techniques, evolutionary algorithms will likely see increased use and development due to the increased availability of computation, more robust and available open source software libraries, and the increasing demand for artificial intelligence techniques. As these techniques become more adopted and capable, it is the right time to take a perspective of their ability to integrate into society and the human processes they intend to augment. In this review, we explore a new taxonomy of evolutionary algorithms and resulting classifications that look at five main areas: the ability to manage the control of the environment with limiters, the ability to explain and repeat the search process, the ability to understand input and output causality within a solution, the ability to manage algorithm bias due to data or user design, and lastly, the ability to add corrective measures. These areas are motivated by today's pressures on industry to conform to both societies concerns and new government regulatory rules. As many reviews of evolutionary algorithms exist, after motivating this new taxonomy, we briefly classify a broad range of algorithms and identify areas of future research.},
	journaltitle = {{arXiv}:1906.08870 [cs]},
	author = {{Andrew N. Sloss} and {Steven Gustafson}},
	urldate = {2020-11-08},
	date = {2019-06-03},
	eprinttype = {arxiv},
	eprint = {1906.08870},
	keywords = {Computer Science - Machine Learning, Computer Science - Neural and Evolutionary Computing},
	file = {arXiv Fulltext PDF:C\:\\Users\\ruben\\Zotero\\storage\\JYQSIS8E\\Sloss y Gustafson - 2019 - 2019 Evolutionary Algorithms Review.pdf:application/pdf;arXiv.org Snapshot:C\:\\Users\\ruben\\Zotero\\storage\\A4GXGM4F\\1906.html:text/html},
}

@software{openai_openaigym_2020,
	title = {openai/gym},
	rights = {View license         ,                 View license},
	abstract = {A toolkit for developing and comparing reinforcement learning algorithms.},
	publisher = {{OpenAI}},
	author = {{OpenAI}},
	urldate = {2020-11-08},
	date = {2020-11-08},
	note = {original-date: 2016-04-27T14:59:16Z},
}

@online{noauthor_openaigym_nodate,
	title = {openai/gym},
	url = {https://github.com/openai/gym},
	abstract = {A toolkit for developing and comparing reinforcement learning algorithms. - openai/gym},
	titleaddon = {{GitHub}},
	urldate = {2020-11-08},
	langid = {english},
	file = {Snapshot:C\:\\Users\\ruben\\Zotero\\storage\\DK3CLLTA\\bipedal_walker.html:text/html},
}

@online{openai_gym_nodate,
	title = {Gym: A toolkit for developing and comparing reinforcement learning algorithms},
	url = {https://gym.openai.com},
	shorttitle = {Gym},
	abstract = {A toolkit for developing and comparing reinforcement learning algorithms},
	author = {{OpenAI}},
	urldate = {2020-11-08},
	file = {Snapshot:C\:\\Users\\ruben\\Zotero\\storage\\NMVHZNS4\\BipedalWalker-v2.html:text/html},
}

@online{m_gestal_indice_nodate,
	title = {Índice General},
	url = {http://sabia.tic.udc.es/mgestal/cv/aaggtutorial/node1.html},
	author = {{M. Gestal}},
	urldate = {2020-11-09},
	file = {Índice General:C\:\\Users\\ruben\\Zotero\\storage\\S858YXFU\\node1.html:text/html},
}

@online{noauthor_65_nodate,
	title = {6.5 Mutación},
	url = {http://sabia.tic.udc.es/mgestal/cv/aaggtutorial/node19.html},
	urldate = {2020-11-09},
	file = {6.5 Mutación:C\:\\Users\\ruben\\Zotero\\storage\\WLJKRXHU\\node19.html:text/html},
}

@online{marcos_gestal_pose_introduccion_nodate,
	title = {Introducción a los Algoritmos Genéticos},
	url = {http://sabia.tic.udc.es/mgestal/cv/aaggtutorial/aagg.html},
	author = {{Marcos Gestal Pose}},
	urldate = {2020-11-09},
	file = {Introducción a los Algoritmos Genéticos:C\:\\Users\\ruben\\Zotero\\storage\\F8IWIZPL\\aagg.html:text/html},
}

@article{pose_introduccion_nodate,
	title = {Introducción a los Algoritmos Genéticos},
	pages = {16},
	author = {Pose, Marcos Gestal},
	langid = {spanish},
	file = {Pose - Introduccio´n a los Algoritmos Gen´eticos.pdf:C\:\\Users\\ruben\\Zotero\\storage\\HIV829XR\\Pose - Introduccio´n a los Algoritmos Gen´eticos.pdf:application/pdf},
}

@article{thomas_geijtenbeek_flexible_2013,
	title = {Flexible muscle-based locomotion for bipedal creatures},
	volume = {32},
	issn = {0730-0301, 1557-7368},
	url = {https://dl.acm.org/doi/10.1145/2508363.2508399},
	doi = {10.1145/2508363.2508399},
	abstract = {We present a muscle-based control method for simulated bipeds in which both the muscle routing and control parameters are optimized. This yields a generic locomotion control method that supports a variety of bipedal creatures. All actuation forces are the result of 3D simulated muscles, and a model of neural delay is included for all feedback paths. As a result, our controllers generate torque patterns that incorporate biomechanical constraints. The synthesized controllers ﬁnd different gaits based on target speed, can cope with uneven terrain and external perturbations, and can steer to target directions.},
	pages = {1--11},
	number = {6},
	journaltitle = {{ACM} Transactions on Graphics},
	shortjournal = {{ACM} Trans. Graph.},
	author = {{Thomas Geijtenbeek} and {Michiel van de Panne} and {A. Frank van der Stappen}},
	urldate = {2020-11-10},
	date = {2013-11},
	langid = {english},
	file = {Geijtenbeek et al. - 2013 - Flexible muscle-based locomotion for bipedal creat.pdf:C\:\\Users\\ruben\\Zotero\\storage\\AZ9YJBAD\\Geijtenbeek et al. - 2013 - Flexible muscle-based locomotion for bipedal creat.pdf:application/pdf},
}

@software{robert_jankowski_robertjankowskiga-openai-gym_2020,
	title = {robertjankowski/ga-openai-gym},
	rights = {{MIT} License         ,                 {MIT} License},
	abstract = {Usage of genetic algorithms to train a neural network in the multiple {OpenAI} gym environments.},
	author = {{Robert Jankowski}},
	urldate = {2020-11-10},
	date = {2020-11-04},
	note = {original-date: 2019-09-02T17:24:45Z},
	keywords = {bipedalwalker, cartpole-v0, cnn, deep-learning, genetic-algorithm, neural-network, neural-networks, openai-gym, pytorch},
}

@misc{david_ha_slime_2020,
	title = {Slime Volleyball Gym Environment},
	url = {https://github.com/hardmaru/slimevolleygym},
	author = {{David Ha}},
	date = {2020},
}

@article{ahmed_genetic_2010-1,
	title = {Genetic Algorithm for the Traveling Salesman Problem using Sequential Constructive Crossover Operator},
	volume = {3},
	doi = {10.14569/IJACSA.2020.0110275},
	abstract = {This paper develops a new crossover operator, Sequential Constructive crossover({SCX}), for a genetic algorithm that generates high quality solutions to the {TravelingSalesman} Problem ({TSP}). The sequential constructive crossover operatorconstructs an offspring from a pair of parents using better edges on the basis of theirvalues that may be present in the parents' structure maintaining the sequence ofnodes in the parent chromosomes. The efficiency of the {SCX} is compared asagainst some existing crossover operators; namely, edge recombination crossover({ERX}) and generalized N-point crossover ({GNX}) for some benchmark {TSPLIBinstances}. Experimental results show that the new crossover operator is better thanthe {ERX} and {GNX}.},
	journaltitle = {International Journal of Biometric and Bioinformatics},
	shortjournal = {International Journal of Biometric and Bioinformatics},
	author = {Ahmed, Zakir},
	date = {2010-03-01},
	file = {Full Text PDF:C\:\\Users\\ruben\\Zotero\\storage\\F38RIL65\\Ahmed - 2010 - Genetic Algorithm for the Traveling Salesman Probl.pdf:application/pdf},
}

@article{kaya_novel_2011,
	title = {A Novel Crossover Operator for Genetic Algorithms: Ring Crossover},
	url = {http://arxiv.org/abs/1105.0355},
	shorttitle = {A Novel Crossover Operator for Genetic Algorithms},
	abstract = {The genetic algorithm ({GA}) is an optimization and search technique based on the principles of genetics and natural selection. A {GA} allows a population composed of many individuals to evolve under specified selection rules to a state that maximizes the "fitness" function. In that process, crossover operator plays an important role. To comprehend the {GAs} as a whole, it is necessary to understand the role of a crossover operator. Today, there are a number of different crossover operators that can be used in {GAs}. However, how to decide what operator to use for solving a problem? A number of test functions with various levels of difficulty has been selected as a test polygon for determine the performance of crossover operators. In this paper, a novel crossover operator called 'ring crossover' is proposed. In order to evaluate the efficiency and feasibility of the proposed operator, a comparison between the results of this study and results of different crossover operators used in {GAs} is made through a number of test functions with various levels of difficulty. Results of this study clearly show significant differences between the proposed operator and the other crossover operators.},
	journaltitle = {{arXiv}:1105.0355 [cs]},
	author = {Kaya, Yılmaz and Uyar, Murat and Tek\{{\textbackslash}textbackslash\}D{\textbackslash}\{j{\textbackslash}\}n, Ramazan},
	urldate = {2020-11-12},
	date = {2011-05-02},
	eprinttype = {arxiv},
	eprint = {1105.0355},
	keywords = {Computer Science - Neural and Evolutionary Computing},
	file = {arXiv Fulltext PDF:C\:\\Users\\ruben\\Zotero\\storage\\V39WAU4P\\Kaya et al. - 2011 - A Novel Crossover Operator for Genetic Algorithms.pdf:application/pdf;arXiv.org Snapshot:C\:\\Users\\ruben\\Zotero\\storage\\5V5GGRQV\\1105.html:text/html},
}

@article{huynh_separating_nodate,
	title = {Separating Axis Theorem for Oriented Bounding Boxes},
	pages = {45},
	author = {Huynh, Johnny},
	langid = {english},
	file = {Huynh - Separating Axis Theorem for Oriented Bounding Boxe.pdf:C\:\\Users\\ruben\\Zotero\\storage\\XLEX8YDS\\Huynh - Separating Axis Theorem for Oriented Bounding Boxe.pdf:application/pdf},
}

@article{carlos_algoritmos_nodate,
	title = {Algoritmos Genéticos. Aplicación al Juego de las N Reinas},
	url = {https://www.academia.edu/28323442/Algoritmos_Gen%C3%A9ticos_Aplicaci%C3%B3n_al_Juego_de_las_N_Reinas},
	abstract = {Algoritmos Genéticos. Aplicación al Juego de las N Reinas},
	author = {Carlos, Juan},
	urldate = {2020-11-12},
	langid = {english},
	file = {Snapshot:C\:\\Users\\ruben\\Zotero\\storage\\4PY8J8SM\\Algoritmos_Genéticos_Aplicación_al_Juego_de_las_N_Reinas.html:text/html},
}

@article{sedeno_articulo_nodate,
	title = {{ARTICULO} Introduccion a la Inteligencia Artificial},
	url = {https://www.academia.edu/28832393/ARTICULO_Introduccion_a_la_Inteligencia_Artificial},
	abstract = {{ARTICULO} Introduccion a la Inteligencia Artificial},
	author = {Sedeño, Nicolas},
	urldate = {2020-11-12},
	langid = {english},
	file = {Snapshot:C\:\\Users\\ruben\\Zotero\\storage\\UN38QC9A\\ARTICULO_Introduccion_a_la_Inteligencia_Artificial.html:text/html},
}

@article{marwala_forecasting_nodate,
	title = {Forecasting the Stock Market Index Using Artificial Intelligence Techniques},
	pages = {166},
	author = {Marwala, Lufuno Ronald},
	langid = {english},
	file = {Marwala - Forecasting the Stock Market Index Using Artificia.pdf:C\:\\Users\\ruben\\Zotero\\storage\\VAPXP46E\\Marwala - Forecasting the Stock Market Index Using Artificia.pdf:application/pdf},
}

@online{santos_using_2020,
	title = {Using Deep Learning {AI} to Predict the Stock Market},
	url = {https://towardsdatascience.com/using-deep-learning-ai-to-predict-the-stock-market-9399cf15a312},
	abstract = {Forecasting Stock Prices with Neural Networks containing Multivariable Inputs from Technical Analysis},
	titleaddon = {Medium},
	author = {Santos, Marco},
	urldate = {2020-11-13},
	date = {2020-09-22},
	langid = {english},
	file = {Snapshot:C\:\\Users\\ruben\\Zotero\\storage\\DNUZX6DH\\using-deep-learning-ai-to-predict-the-stock-market-9399cf15a312.html:text/html},
}